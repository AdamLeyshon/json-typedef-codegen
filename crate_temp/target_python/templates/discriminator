@dataclass
class {{ discriminator.name }}:
{{ discriminator.metadata|description(1) }}
    {{ discriminator.tag_name }}: str

    @classmethod
    def from_json(cls, data) -> {{ "{:?}"|format(discriminator.name) }}:
        """
        Construct an instance of this class from parsed JSON data.
        """

        return {
{% for (tag_value, variant) in discriminator.variants %}
            {{ "{:?}"|format(tag_value) }}: {{ variant }},
{% endfor %}
        }[data[{{ "{:?}"|format(discriminator.tag_json_name) }}]].from_json(data)

    def to_json(self):
        """
        Generate JSON-ready data from an instance of this class.
        """

        pass # subclasses will implement this
